#!/usr/bin/env python

__doc__ = """
Strips PDB file into a single conformation for MD simulations.

Usage: pdbstrip [-hysanor] <pdb> [<out_pdb>]

-y   strip hydrogens
-s   strip solvent
-a   strip alternative conformation
-n   strip out all other models
-o   strip HETATM fields
-r   renumber residues
"""

from pdbremix import pdbtext
from pdbremix import data
from pdbremix.lib.docopt import docopt

arg = docopt(__doc__)

raw_txt = open(arg['<pdb>'], 'Ur').read()
txt = raw_txt
if arg['-y']:
  print "Stripping hydrogens"
  txt = pdbtext.strip_hydrogens(txt)
if arg['-s']:
  print "Stripping solvent", ' '.join(data.solvent_res_types)
  txt = pdbtext.strip_solvent(txt)
if arg['-a']:
  print "Stripping alternate conformations"
  txt = pdbtext.strip_alternative_atoms(txt)
if arg['-n']:
  print "Stripping all other models"
  txt = pdbtext.strip_other_nmr_models(txt)
if arg['-o']:
  print "Stripping HETATM residues"
  txt = pdbtext.strip_lines(txt, lambda l: l.startswith('HETATM'))
if arg['-r']:
  print "Renumber residues consequetively"
  txt = pdbtext.renumber_residues(txt)

if raw_txt != txt:
  out_pdb = arg['<out_pdb>'] if arg['<out_pdb>'] else arg['<pdb>']
  open(out_pdb, 'w').write(txt)
  print out_pdb
else:
  print __doc__