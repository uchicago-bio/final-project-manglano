#!/usr/bin/env python
# encoding: utf-8

"""
Shows pulled residues in a PUFF simulation in PYMOL.

Usage: puffshow [-h -b] <puff-config> 
  
  -b <bgcolor>
"""


import re
from pdbremix.lib.docopt import docopt
from pdbremix import pdbatoms
from pdbremix import util
from pdbremix import data
from pdbremix import pymol


def highlight_domains_in_bfactor_of_pdb(pdb, domains, new_pdb):
  soup = pdbatoms.Soup(pdb)
  for i, domain in enumerate(domains):
    for j in domain:
      for a in soup.residue(j).atoms():
        a.bfactor = i+1
  soup.write_pdb(new_pdb)


highlight_domains_script = """
hide sticks
select domain1, b>0 and b<1.5
select domain2, b>1.5 and b<2.5
select domain3, b>2.5 and b<3.5
select bb, name n+h+c+o+oxt+ch3+hh31+hh32+hh33+h1+h2+h3
select nuc, resn A+U+T+C+G+A3+U3+T3+C3+G3+A5+U5+T5+C5+G5+DA+DT+DC+DG
select nuc_bb, name P+O1P+O2P+OP1+Op2+O3'+C3'+C2'+C1'+O4'+C4'+C5'+O5'
util.cbaw all
color white, nuc
util.cbao domain1
util.cbap domain2
util.cbas domain3
hide cartoon, nuc
show cartoon, nuc_bb
show sticks, (domain1 or domain2 or domain3) and (not bb and not hydro)
deselect
clip far, 5
""" 


def extract_domains_from_strategy_str(strategy_cmd):
  p = re.search(r'\(.+\)', strategy_cmd)
  strategy_args_str = p.group()[1:-1]
  words = [w for w in strategy_args_str.split() if "=" not in w]
  strategy_args_str = ' '.join(words)
  strategy_args = eval(strategy_args_str)
  domain1, domain2 = strategy_args[0:2]
  return domain1, domain2


if __name__ == "__main__":
  arg = docopt(__doc__)

  parms = util.read_dict(arg['<puff-config>'])
  pdb = parms['in_pdb']
  strategy_cmd = parms['pulse_strategy']

  domain1, domain2 = extract_domains_from_strategy_str(strategy_cmd)
  new_pdb = pdb.replace('.pdb', '-t.pdb')
  highlight_domains_in_bfactor_of_pdb(pdb, [domain1, domain2], new_pdb)

  script = ""
  if arg['-b']:
    script += pymol.bgcolor_script(arg['-b'])
  script += pymol.load_pdbs_script([new_pdb])
  script += pymol.cartoon_script
  script += highlight_domains_script
  pml = 'pdbshow.pml'
  open(pml, 'w').write(script)

  pymol.run_pymol_script(pml)

  util.clean_fname(pml)
  util.clean_fname(new_pdb) 



